neg_data |> select(starts_with("^PI"))
neg_data |> select(starts_with("^LPI"))
neg_data |> select(starts_with("^PA"))
neg_data |> select(starts_with("^PS"))
View(neg_data)
pos_data |> select(starts_with("BMP"))
neg_data |> select(starts_with("^FA"))
pos_norm <- merge(pos_norm_key, my_IS, by = "IS_abbreviation", all = T)
neg_norm <- merge(neg_norm_key, my_IS, by = "IS_abbreviation", all = T)
View(pos_data)
View(pos_data)
View(pos_norm)
View(pos_data)
pos_data <- pos_data[,first:ncol(pos_data)]/pos_data[,tonorm]
pos_data[,tonorm]
first = 6
# index of weight column
tonorm = 5
pos_data <- pos_data[,first:ncol(pos_data)]/pos_data[,tonorm]
neg_data <- neg_data[,first:ncol(neg_data)]/neg_data[,tonorm]
View(pos_data)
#| echo: false
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(readxl)){install.packages("readxl")}
if(!require(Cairo)){install.packages("Cairo")}
mypath <- "output/initial_data"
myfiles <- list.files(mypath)
print(myfiles)                                         # Lists data files within folder
filenumber_pos <- 2
filenumber_neg <- 1
loadme <- paste0(mypath, "/", myfiles[filenumber_pos])
pos_data <- read_csv(paste0(loadme))
loadme <- paste0(mypath, "/", myfiles[filenumber_neg])
neg_data <- read_csv(paste0(loadme))
# Make sample names characters
pos_data$Sample <- as.character(pos_data$Sample)
neg_data$Sample <- as.character(neg_data$Sample)
my_IS <- read_csv("raw_data/standards_info.csv")
IS_name <- my_IS$Standard
pos_IS <- pos_data |>
select(Sample, any_of(IS_name))
pos_IS <- pos_IS |>
mutate_if(is.numeric, log10)
CairoPDF("output/IS_graphs/plasma_pos_IS.pdf")
for(i in names(pos_IS)[-1]){
myvar <- sym(i)
p <- ggplot(data = pos_IS,
aes(x = Sample, y = !!myvar
)
) +
geom_boxplot() +
ylab("log10(Intensity)") +
xlab("Sample") +
scale_y_continuous(limits = c(2, 9)) +
ggtitle(paste0(i))
print(p)
}
dev.off()
neg_IS <- neg_data |>
select(Sample, any_of(IS_name))
neg_IS <- neg_IS |>
mutate_if(is.numeric, log10)
CairoPDF("output/IS_graphs/plasma_neg_IS.pdf")
for(i in names(neg_IS)[-1]){
myvar <- sym(i)
p <- ggplot(data = neg_IS,
aes(x = Sample, y = !!myvar
)
) +
geom_boxplot() +
ylab("log10(Intensity)") +
xlab("Sample") +
scale_y_continuous(limits = c(2, 9)) +
ggtitle(paste0(i))
print(p)
}
dev.off()
rm(i, myvar, p, pos_IS, neg_IS)
pos_norm_key <- read_xlsx("raw_data/normalization_info.xlsx", sheet = 1)
neg_norm_key <- read_xlsx("raw_data/normalization_info.xlsx", sheet = 2)
pos_data |> select(starts_with("^BMP"))
neg_data |> select(starts_with("^FA"))
pos_norm <- merge(pos_norm_key, my_IS, by = "IS_abbreviation", all = T)
neg_norm <- merge(neg_norm_key, my_IS, by = "IS_abbreviation", all = T)
rm(pos_norm_key, neg_norm_key)
pos_IS <- pos_data |>
select(Sample, any_of(IS_name))
neg_IS <- neg_data |>
select(Sample, any_of(IS_name))
pos_IS <- pos_IS |>
pivot_longer(cols = -c('Sample'),
names_to = 'Standard',
values_to = 'Intensity')
neg_IS <- neg_IS |>
pivot_longer(cols = -c('Sample'),
names_to = 'Standard',
values_to = 'Intensity')
pos_IS <- merge(pos_IS, my_IS, by = "Standard")
neg_IS <- merge(neg_IS, my_IS, by = "Standard")
pos_IS <- pos_IS |>
mutate(pmol_norm = pmol_inj_neg/Intensity)
neg_IS <- neg_IS |>
mutate(pmol_norm = pmol_inj_neg/Intensity)
pos_IS <- pos_IS |> select(Sample, Standard, pmol_norm) |>
pivot_wider(names_from = Standard,
values_from = pmol_norm)
neg_IS <- neg_IS |> select(Sample, Standard, pmol_norm) |>
pivot_wider(names_from = Standard,
values_from = pmol_norm)
pos_data <- pos_data |>
select(-any_of(IS_name))
neg_data <- neg_data |>
select(-any_of(IS_name))
pos_data <- merge(pos_data, pos_IS, by = "Sample")
neg_data <- merge(neg_data, neg_IS, by = "Sample")
for (i in names(pos_IS)[-1]) {
temp <- pos_norm |> filter(Standard.x %in% i)
toMatch <- temp$Regex
pos_data[,grep(paste(toMatch,
collapse= "|"),
names(pos_data),
value = TRUE)
] <-   pos_data[,grep(paste(toMatch,
collapse= "|"),
names(pos_data),
value = TRUE)
] * pos_data[,i]
}
for (i in names(neg_IS)[-1]) {
temp <- neg_norm |> filter(Standard.x %in% i)
toMatch <- temp$Regex
neg_data[,grep(paste(toMatch,
collapse= "|"),
names(neg_data),
value = TRUE)
] <-   neg_data[,grep(paste(toMatch,
collapse= "|"),
names(neg_data),
value = TRUE)
] * neg_data[,i]
}
pos_data <- pos_data |>
select(-any_of(IS_name))
neg_data <- neg_data |>
select(-any_of(IS_name))
# index of first lipid column
first = 6
# index of weight column
tonorm = 5
pos_data[,first:ncol(pos_data)] <- pos_data[,first:ncol(pos_data)]/pos_data[,tonorm]
neg_data[,first:ncol(neg_data)] <- neg_data[,first:ncol(neg_data)]/neg_data[,tonorm]
View(pos_data)
View(pos_data)
View(pos_data)
write_csv(pos_data, file = "output/final_curated/plasma_pos_uM.csv")
write_csv(neg_data, file = "output/final_curated/plasma_neg_uM.csv")
rm(list = ls())
sessionInfo()
#| echo: false
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(dplyr)){install.packages("dplyr")}
if(!require(Cairo)){install.packages("Cairo")}
sessionInfo()
#| echo: false
if(!require(tidyverse)){install.packages("tidyverse")}
mypath <- "output/curated_data"
myfiles <- list.files(mypath)
print(myfiles)                                         # Lists data files within folder
mypath <- "output/final_curated"
myfiles <- list.files(mypath)
print(myfiles)                                         # Lists data files within folder
filenumber_pos <- 2
filenumber_neg <- 1
loadme <- paste0(mypath, "/", myfiles[filenumber_pos])
pos_data <- read_csv(paste0(loadme))
loadme <- paste0(mypath, "/", myfiles[filenumber_neg])
neg_data <- read_csv(paste0(loadme))
# Make sample names characters
pos_data$Sample <- as.character(pos_data$Sample)
neg_data$Sample <- as.character(neg_data$Sample)
View(pos_data)
View(neg_data)
#| echo: false
if(!require(tidyverse)){install.packages("tidyverse")}
mypath <- "output/final_curated"
myfiles <- list.files(mypath)
print(myfiles)                                         # Lists data files within folder
filenumber_pos <- 2
filenumber_neg <- 1
loadme <- paste0(mypath, "/", myfiles[filenumber_pos])
pos_data <- read_csv(paste0(loadme))
loadme <- paste0(mypath, "/", myfiles[filenumber_neg])
neg_data <- read_csv(paste0(loadme))
# Make sample names characters
pos_data$Sample <- as.character(pos_data$Sample)
neg_data$Sample <- as.character(neg_data$Sample)
shared <- intersect(colnames(pos_data)[first:ncol(pos_dat)],
colnames(neg_data)[first:ncol(neg_dat)])
shared <- intersect(colnames(pos_data)[first:ncol(pos_data)],
colnames(neg_data)[first:ncol(neg_data)])
shared <- intersect(names(pos_data)[first:ncol(pos_data)],
names(neg_data)[first:ncol(neg_data)])
# index of first lipid column
first = 6
shared <- intersect(names(pos_data)[first:ncol(pos_data)],
names(neg_data)[first:ncol(neg_data)])
print(shared)
n_s <- neg_dat[,shared]
n_s <- neg_data |> select(shared)
p_s <- pos_data |> select(shared)
negMode = as.numeric()
posMode = as.numeric()
for (i in 1:ncol(n_s)){
negMode[i] = round(summary(n_s[[i]])[3],4)
posMode[i] = round(summary(p_s[[i]])[3],4)
}
# Compare semi-quantitative values side-by-side
common <- cbind(colnames(n_s), negMode, posMode)
View(common)
common <- as_tibble(common)
common[,2:3] <- sapply(common[,2:3], as.numeric)
View(common)
NegHigh <- common$V1[common[[2]] > common[[3]]]  # higher intensity in negative mode
PosHigh <- common$V1[common[[3]] > common[[2]]]  # higher intensity in positive mode
neg_dat |> select(-PosHigh)
# Remember to exclude the variables higher in negative mode from the POSITIVE data frame! And vice-versa
neg_final <- neg_data |> select(-PosHigh)
pos_final <- pos_data |> select(-all_of(NegHigh))
View(neg_final)
shared_test <- intersect(names(neg_final)[first:ncol(neg_final)],
names(pos_final[first:ncol(pos_final)]
)
)
print(shared_test)
pos_final |> select(Sample, first:ncol(pos_final))
# Final merged dataset
pos_merge <- pos_final |> select(Sample, first:ncol(pos_final))
Lipids_Final <- merge(neg_final, pos_merge, by = "Sample")
Lipids_Final <- Lipids_Final |> tibble |>
select(colnames(Lipids_Final)[1:(first-1)],
sort(colnames(.)
)
)
Lipids_Final |> tibble |>
select(1:(first-1),
sort(colnames(.)
)
)
Lipids_Final |> tibble |>
select(1:(first-1),
sort(names(.)
)
)
Lipids_Final |> tibble |>
select(1:(first-1),
sort(first:ncol(Lipids_Final)
)
)
Lipids_Final |>
select(1:(first-1),
sort(first:ncol(Lipids_Final)
)
)
Lipids_Final <- Lipids_Final |> select(1:(first-1),
sort(first:ncol(Lipids_Final)
)
)
View(Lipids_Final)
Lipids_Final <- merge(neg_final, pos_merge, by = "Sample")
View(Lipids_Final)
# This
Lipids_Final <- Lipids_Final |> select(1:(first-1),
sort(first:ncol(Lipids_Final)
)
)
Lipids_Final <- Lipids_Final |> select(1:(first-1),
arrange(first:ncol(Lipids_Final)
)
)
Lipids_Final <- Lipids_Final |> select(1:(first-1),
order(first:ncol(Lipids_Final)
)
)
Lipids_Final <- Lipids_Final |> select(1:(first-1),
sort(first:ncol(Lipids_Final)
)
)
Lipids_Final <- Lipids_Final |> select(1:(first-1),
order(colnames(Lipid_Final)[first:ncol(Lipids_Final)]
)
)
Lipids_Final <- Lipids_Final |> select(1:(first-1),
sort(colnames(Lipid_Final)[first:ncol(Lipids_Final)]
)
)
colnames(Lipid_Final)[first:ncol(Lipids_Final)]
Lipids_Final <- Lipids_Final |> select(1:(first-1),
order(colnames(Lipid_Final)[first:ncol(Lipid_Final)]
)
)
Lipids_Final <- Lipids_Final |> select(1:(first-1),
order(colnames(Lipids_Final)[first:ncol(Lipids_Final)]
)
)
View(Lipids_Final)
Lipids_Final <- merge(neg_final, pos_merge, by = "Sample")
# This
Lipids_Final <- Lipids_Final |> select(1:(first-1),
order(colnames(Lipids_Final)[first:ncol(Lipids_Final)]
)
)
pos_merge <- pos_final |> select(Sample, first:ncol(pos_final))
Lipids_Final <- merge(neg_final, pos_merge, by = "Sample")
Lipids_Final <- Lipids_Final %>%
tibble %>%
select(colnames(Lipids_Final)[1:5], sort(colnames(.)))
View(Lipids_Final)
Lipids_Final <- Lipids_Final %>%
tibble %>%
select(colnames(Lipids_Final)[1:5], sort(colnames(.))) |>
arrange(Sample)
Lipids_Final <- Lipids_Final %>%
tibble %>%
select(colnames(Lipids_Final)[1:5], sort(colnames(.))) |>
order(Sample)
Lipids_Final <- merge(neg_final, pos_merge, by = "Sample")
Lipids_Final <- Lipids_Final %>%
tibble %>%
select(colnames(Lipids_Final)[1:(first-1)], sort(colnames(.))
)
# Change NA values to 0
Lipids_Final <- Lipids_Final |> replace_na(0)
# Change NA values to 0
Lipids_Final <- Lipids_Final %>% replace_na(is.na(.), 0)
Lipids_Final %>% replace_na(is.na(.), 0)
# Change NA values to 0
Lipids_Final[is.na(Lipids_Final)] <- 0
write_csv(Lipids_Final_norm, "output/final_curated/final_data_plasma_uM.csv")
write_csv(Lipids_Final, "output/final_curated/final_data_plasma_uM.csv")
rm(list=ls())
sessionInfo()
#| echo: false
if(!require(tidyverse)){install.packages("tidyverse")}
mypath <- "output/final_curated"
myfiles <- list.files(mypath)
print(myfiles)                                         # Lists data files within folder
filenumber_pos <- 2
filenumber_neg <- 1
loadme <- paste0(mypath, "/", myfiles[filenumber_pos])
pos_data <- read_csv(paste0(loadme))
loadme <- paste0(mypath, "/", myfiles[filenumber_neg])
neg_data <- read_csv(paste0(loadme))
# Make sample names characters
pos_data$Sample <- as.character(pos_data$Sample)
neg_data$Sample <- as.character(neg_data$Sample)
# index of first lipid column
first = 6
# Lipids identified in both modes
shared <- intersect(names(pos_data)[first:ncol(pos_data)],
names(neg_data)[first:ncol(neg_data)])
# These are lipid species present in both modes
print(shared)
# index of first lipid column
first = 6
# Lipids identified in both modes
shared <- intersect(names(pos_data)[first:ncol(pos_data)],
names(neg_data)[first:ncol(neg_data)])
# These are lipid species present in both modes
print(shared)
filenumber_pos <- 3
filenumber_neg <- 2
loadme <- paste0(mypath, "/", myfiles[filenumber_pos])
pos_data <- read_csv(paste0(loadme))
loadme <- paste0(mypath, "/", myfiles[filenumber_neg])
neg_data <- read_csv(paste0(loadme))
# Make sample names characters
pos_data$Sample <- as.character(pos_data$Sample)
neg_data$Sample <- as.character(neg_data$Sample)
# index of first lipid column
first = 6
# Lipids identified in both modes
shared <- intersect(names(pos_data)[first:ncol(pos_data)],
names(neg_data)[first:ncol(neg_data)])
# These are lipid species present in both modes
print(shared)
negMode = as.numeric()
posMode = as.numeric()
for (i in 1:ncol(n_s)){
negMode[i] = round(summary(n_s[[i]])[3],4)
posMode[i] = round(summary(p_s[[i]])[3],4)
}
n_s <- neg_data |> select(shared)
# subset 'shared lipids' from positive mode data set
p_s <- pos_data |> select(shared)
negMode = as.numeric()
posMode = as.numeric()
for (i in 1:ncol(n_s)){
negMode[i] = round(summary(n_s[[i]])[3],4)
posMode[i] = round(summary(p_s[[i]])[3],4)
}
summary(n_s[[i]])[3]
common <- cbind(colnames(n_s), negMode, posMode)
common <- as_tibble(common)
common[,2:3] <- sapply(common[,2:3], as.numeric)
# This is the head-to-head comparison of values between negative and positive mode data
head(common)
NegHigh <- common$V1[common[[2]] > common[[3]]]  # higher intensity lipids in negative mode
PosHigh <- common$V1[common[[3]] > common[[2]]]  # higher intensity lipids in positive mode
print(NegHigh)
NegHigh <- NegHigh[x != "Cer_NS d18:1_22:0"]
NegHigh <- NegHigh[NegHigh != "Cer_NS d18:1_22:0"]
print(NegHigh)
NegHigh <- append(NegHigh, "Cer_NS d18:1_22:0")
print(NegHigh)
# Remove the NegHigh lipids from the negatie mode data
pos_data <- pos_data |> select(-all_of(NegHigh))
# Remove the PosHigh lipids from the negatie mode data
neg_data <- neg_data |> select(-all_of(PosHigh))
# Remove the NegHigh lipids from the negatie mode data
pos_data <- pos_data |> select(-all_of(NegHigh))
print(shared_test)
shared_test <- intersect(names(neg_data)[first:ncol(neg_data)],
names(pos_data[first:ncol(pos_data)]
)
)
print(shared_test)
# Final merged dataset
pos_merge <- pos_final |> select(Sample, first:ncol(pos_final))
# Final merged dataset
pos_merge <- pos_data |> select(Sample, first:ncol(pos_data))
Lipids_Final <- merge(neg_data, pos_merge, by = "Sample")
# Arrange lipid columns alphabetically
Lipids_Final <- Lipids_Final %>%
tibble %>%
select(colnames(Lipids_Final)[1:(first-1)], sort(colnames(.))
)
# Change NA values to 0
Lipids_Final[is.na(Lipids_Final)] <- 0
#| echo: false
if(!require(tidyverse)){install.packages("tidyverse")}
mypath <- "output/final_curated"
myfiles <- list.files(mypath)
print(myfiles)                                         # Lists data files within folder
filenumber_pos <- 3
filenumber_neg <- 2
loadme <- paste0(mypath, "/", myfiles[filenumber_pos])
pos_data <- read_csv(paste0(loadme))
loadme <- paste0(mypath, "/", myfiles[filenumber_neg])
neg_data <- read_csv(paste0(loadme))
# Make sample names characters
pos_data$Sample <- as.character(pos_data$Sample)
neg_data$Sample <- as.character(neg_data$Sample)
# index of first lipid column
first = 6
# Lipids identified in both modes
shared <- intersect(names(pos_data)[first:ncol(pos_data)],
names(neg_data)[first:ncol(neg_data)])
# These are lipid species present in both modes
print(shared)
# subset 'shared lipids' from negative mode data set
n_s <- neg_data |> select(shared)
# subset 'shared lipids' from positive mode data set
p_s <- pos_data |> select(shared)
# Calculate median for shared lipids in both modes
negMode = as.numeric()
posMode = as.numeric()
for (i in 1:ncol(n_s)){
negMode[i] = round(summary(n_s[[i]])[3],4)
posMode[i] = round(summary(p_s[[i]])[3],4)
}
# Compare semi-quantitative values side-by-side
common <- cbind(colnames(n_s), negMode, posMode)
common <- as_tibble(common)
common[,2:3] <- sapply(common[,2:3], as.numeric)
# This is the head-to-head comparison of values between negative and positive mode data
head(common)
NegHigh <- common$V1[common[[2]] > common[[3]]]  # higher intensity lipids in negative mode
PosHigh <- common$V1[common[[3]] > common[[2]]]  # higher intensity lipids in positive mode
print(NegHigh)
NegHigh <- NegHigh[NegHigh != "Cer_NS d18:1_22:0"]  # remove lipid from list by name
NegHigh <- append(NegHigh, "Cer_NS d18:1_22:0")     # add lipid from list by name
# Remove the PosHigh lipids from the negative mode data
neg_data <- neg_data |> select(-all_of(PosHigh))
# Remove the NegHigh lipids from the positive mode data
pos_data <- pos_data |> select(-all_of(NegHigh))
# Double check no common variables remain (IS is fine)
shared_test <- intersect(names(neg_data)[first:ncol(neg_data)],
names(pos_data[first:ncol(pos_data)]
)
)
# There should not be any lipids here
print(shared_test)
# Final merged dataset
pos_merge <- pos_data |> select(Sample, first:ncol(pos_data))
Lipids_Final <- merge(neg_data, pos_merge, by = "Sample")
# Arrange lipid columns alphabetically
Lipids_Final <- Lipids_Final %>%
tibble %>%
select(colnames(Lipids_Final)[1:(first-1)], sort(colnames(.))
)
# Change NA values to 0
Lipids_Final[is.na(Lipids_Final)] <- 0
filenumber_neg <- 1
loadme <- paste0(mypath, "/", myfiles[filenumber_neg])
neg_data <- read_csv(paste0(loadme))
#| echo: false
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(readxl)){install.packages("readxl")}
if(!require(Cairo)){install.packages("Cairo")}
mypath <- "output/initial_data"
myfiles <- list.files(mypath)
print(myfiles)                                         # Lists data files within folder
